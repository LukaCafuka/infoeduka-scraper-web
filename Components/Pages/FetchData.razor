@page "/fetch"
@rendermode InteractiveServer
@inject InfoedukaScraper.FetchData FetchService
@inject IeAuthentication AuthService
@inject HttpClient Http



@if (!string.IsNullOrEmpty(AuthService.LoginCookie))
{
    <MessageBox Message="Cookie found!" Status=0 isDisplayed=true></MessageBox>
}
else
{
    <MessageBox Message="No cookie found..." Status=1 isDisplayed=true></MessageBox>
}

@if (predmetiList == null)
{
    <p>Loading...</p>
}
else
{
    @foreach (var predmet in predmetiList)
    {
        <li class="text-white text-lg list-none">@predmet</li>
    }
}


@code {

    List<string> predmetiList;

    protected override async Task OnInitializedAsync()
    {
        try
        {

            var json = await FetchService.GetJson(AuthService.LoginCookie);

            predmetiList = FetchService.ExtractStudyNames(json);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching data: {ex.Message}");
        }
    }
    
}  